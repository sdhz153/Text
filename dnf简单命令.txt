校验文件md5
md5sum <package> 文件名

## 版本

dnf --vresion 查看DNF包管理器版本



## 帮助

dnf help
dnf help <command>
dnf history


## 信息查看

dnf repolist 查看系统中可用的DNF软件库
dnf search <package> 搜索软件库中的RPM包
dnf list installed  列出所有安装的rpm包
dnf list available 列出所有可安装的rpm包
dnf info <package>  查看软件包详情
dnf provides <file> 查找某一文件的提供者


## 软件包操作

dnf install <package> 安装软件包机器所需的依赖
dnf update <package> 升级软件包
dnf remove <package> 删除软件包
dnf reinstall <package> 重新安装特定软件包
dnf distro-sync 更新软件包到最新的稳定发行版


## 系统软件包

dnf check-update 检查系统所有软件包的更新
dnf update 升级所有系统软件包
dnf clean all 删除缓存的无用软件包
四、dnf命令配置文件
/etc/dnf/dnf.conf
五、dnf代理设置
proxy=http://<ip address>:<port>
proxy_username=<username>
proxy_password=<password>
六、dnf命令实例
使用dnf安装 卸载 control-center 命令：

sudo dnf install control-center
  
sudo dnf remove control-center


#dnf 升级软件
sudo dnf update
 

#dnf 升级系统
sudo dnf upgrade
 

#dnf 清除 RPM 包缓存
sudo dnf clean packages

查看系统中可用的 DNF 软件库

用处：该命令用于显示系统中可用的 DNF 软件库

dnf repolist
查看系统中可用和不可用的所有的 DNF 软件库

用处：该命令用于显示系统中可用和不可用的所有的 DNF 软件库

dnf repolist all
列出所有 RPM 包

用处：该命令用于列出用户系统上的所有来自软件库的可用软件包和所有已经安装在系统上的软件包

dnf list
列出所有安装了的 RPM 包

用处：该命令用于列出所有安装了的 RPM 包

dnf list installed
列出所有可供安装的 RPM 包

用处：该命令用于列出来自所有可用软件库的可供安装的软件包

dnf list available
搜索软件库中的 RPM 包

用处：当你不知道你想要安装的软件的准确名称时，你可以用该命令来搜索软件包。你需要在”search”参数后面键入软件的部分名称来搜索。（在本例中我们使用”nano”）

dnf search nano
查找某一文件的提供者

用处：当你想要查看是哪个软件包提供了系统中的某一文件时，你可以使用这条命令。（在本例中，我们将查找”/bin/bash”这个文件的提供者）

dnf provides /bin/bash
查看软件包详情

用处：当你想在安装某一个软件包之前查看它的详细信息时，这条命令可以帮到你。（在本例中，我们将查看”nano”这一软件包的详细信息）

dnf info nano
安装软件包

用处：使用该命令，系统将会自动安装对应的软件及其所需的所有依赖（在本例中，我们将用该命令安装nano软件）

dnf install nano
升级软件包

用处：该命令用于升级制定软件包（在本例中，我们将用命令升级”systemd”这一软件包）

dnf update systemd
检查系统软件包的更新

用处：该命令用于检查系统中所有软件包的更新

dnf check-update
升级所有系统软件包

用处：该命令用于升级系统中所有有可用升级的软件包

dnf update 或 dnf upgrade
删除软件包

用处：删除系统中指定的软件包（在本例中我们将使用命令删除”nano”这一软件包）

dnf remove nano 或 dnf erase nano
删除无用孤立的软件包

用处：当没有软件再依赖它们时，某一些用于解决特定软件依赖的软件包将会变得没有存在的意义，该命令就是用来自动移除这些没用的孤立软件包。

dnf autoremove
删除缓存的无用软件包

用处：在使用 DNF 的过程中，会因为各种原因在系统中残留各种过时的文件和未完成的编译工程。我们可以使用该命令来删除这些没用的垃圾文件。

dnf clean all
获取有关某条命令的使用帮助

用处：该命令用于获取有关某条命令的使用帮助（包括可用于该命令的参数和该命令的用途说明）（本例中我们将使用命令获取有关命令”clean”的使用帮助）

dnf help clean
查看所有的 DNF 命令及其用途

用处：该命令用于列出所有的 DNF 命令及其用途

dnf help
查看 DNF 命令的执行历史

用处：您可以使用该命令来查看您系统上 DNF 命令的执行历史。通过这个手段您可以知道在自您使用 DNF 开始有什么软件被安装和卸载。

dnf history
查看所有的软件包组

用处：该命令用于列出所有的软件包组

dnf grouplist
安装一个软件包组

用处：该命令用于安装一个软件包组（本例中，我们将用命令安装”Educational Software”这个软件包组）

dnf groupinstall ‘Educational Software’
升级一个软件包组中的软件包

用处：该命令用于升级一个软件包组中的软件包（本例中，我们将用命令升级”Educational Software”这个软件包组中的软件）

dnf groupupdate ‘Educational Software’
删除一个软件包组

用处：该命令用于删除一个软件包组（本例中，我们将用命令删除”Educational Software”这个软件包组）

dnf groupremove ‘Educational Software’
从特定的软件包库安装特定的软件

用处：该命令用于从特定的软件包库安装特定的软件（本例中我们将使用命令从软件包库 epel 中安装 phpmyadmin 软件包）

dnf –enablerepo=epel install phpmyadmin
更新软件包到最新的稳定发行版

用处：该命令可以通过所有可用的软件源将已经安装的所有软件包更新到最新的稳定发行版

dnf distro-sync
重新安装特定软件包

用处：该命令用于重新安装特定软件包（本例中，我们将使用命令重新安装”nano”这个软件包）

dnf reinstall nano
回滚某个特定软件的版本

用处：该命令用于降低特定软件包的版本（如果可能的话）（本例中，我们将使用命令降低”acpid”这个软件包的版本）

dnf downgrade acpid
样例输出：

Using metadata from Wed May 20 12:44:59 2015
No match for available package: acpid-2.0.19-5.el7.x86_64
Error: Nothing to do.
原作者注：在执行这条命令的时候， DNF 并没有按照我期望的那样降级指定的软件（“acpid”）。该问题已经上报。

dnf remove nano 或 dnf erase nano

1.关机 (系统的关机、重启以及登出 ) 的命令
shutdown -h now 关闭系统(1) 
init 0 关闭系统(2) 
telinit 0 关闭系统(3) 
shutdown -h hours:minutes & 按预定时间关闭系统 
shutdown -c 取消按预定时间关闭系统 
shutdown -r now 重启(1) 
reboot 重启(2) 
logout 注销 

2.查看系统信息的命令
arch 显示机器的处理器架构(1) 
uname -m 显示机器的处理器架构(2) 
uname -r 显示正在使用的内核版本 
dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) 
hdparm -i /dev/hda 罗列一个磁盘的架构特性 
hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 
cat /proc/cpuinfo 显示CPU info的信息 
cat /proc/interrupts 显示中断 
cat /proc/meminfo 校验内存使用 
cat /proc/swaps 显示哪些swap被使用 
cat /proc/version 显示内核的版本 
cat /proc/net/dev 显示网络适配器及统计 
cat /proc/mounts 显示已加载的文件系统 
lspci -tv 罗列 PCI 设备 
lsusb -tv 显示 USB 设备 
date 显示系统日期 
cal 2007 显示2007年的日历表 
date 041217002007.00 设置日期和时间 - 月日时分年.秒 
clock -w 将时间修改保存到 BIOS 
3.文件和目录操作命令
cd /home 进入 '/ home' 目录' 
cd .. 返回上一级目录 
cd ../.. 返回上两级目录 
cd 进入个人的主目录 
cd ~user1 进入个人的主目录 
cd - 返回上次所在的目录 
pwd 显示工作路径 
ls 查看目录中的文件 
ls -F 查看目录中的文件 
ls -l 显示文件和目录的详细资料 
ls -a 显示隐藏文件  
mkdir dir1 创建一个叫做 'dir1' 的目录' 
mkdir dir1 dir2 同时创建两个目录 
mkdir -p /tmp/dir1/dir2 创建一个目录树 
rm -f file1 删除一个叫做 'file1' 的文件' 
rmdir dir1 删除一个叫做 'dir1' 的目录' 
rm -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容 
rm -rf dir1 dir2 同时删除两个目录及它们的内容 
mv dir1 new_dir 重命名/移动 一个目录 
cp file1 file2 复制一个文件 
cp dir/* . 复制一个目录下的所有文件到当前工作目录 
cp -a /tmp/dir1 . 复制一个目录到当前工作目录 
cp -a dir1 dir2 复制一个目录 
ln -s file1 lnk1 创建一个指向文件或目录的软链接 
ln file1 lnk1 创建一个指向文件或目录的物理链接 
touch  file1 创建一个文件
4.文件搜索命令
find / -name file1 从 '/' 开始进入根文件系统搜索文件和目录 
find / -user user1 搜索属于用户 'user1' 的文件和目录 
find  /home/user1  -name  \*.bin 在目录 '/ home/user1' 中搜索带有'.bin' 结尾的文件 
find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件 
find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件 
locate \*.ps  寻找以 '.ps' 结尾的文件 - 先运行 'updatedb' 命令 
whereis file 显示一个二进制文件、源码或man的位置 
which file  显示一个二进制文件或可执行文件的完整路径 

5.查看文件内容 
cat file1 从第一个字节开始正向查看文件的内容 
tac file1 从最后一行开始反向查看一个文件的内容 
more file1 查看一个长文件的内容 
less file1 类似于 'more' 命令，但是它允许在文件中和正向操作一样的反向操作 
head -2 file1 查看一个文件的前两行 
tail -2 file1 查看一个文件的最后两行 5.挂载命令
mount /dev/hda2 /mnt/hda2 挂载一个叫做hda2的盘  （注：确定目录 '/ mnt/hda2' 已经存在） 
umount /dev/hda2  卸载一个叫做hda2的盘 （先从挂载点 '/ mnt/hda2' 退出）
fuser -km /mnt/hda2 当设备繁忙时强制卸载 
umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件（当文件为只读或当磁盘写满时非常有用） 
mount /dev/fd0 /mnt/floppy 挂载一个软盘 
mount /dev/cdrom /mnt/cdrom 挂载一个光盘
mount /dev/hdc /mnt/cdrecorder 挂载一个cdrw或dvdrom 
mount /dev/hdb /mnt/cdrecorder 挂载一个cdrw或dvdrom 
mount -o loop file.iso /mnt/cdrom 挂载一个文件或ISO镜像文件 
mount -t vfat /dev/hda5 /mnt/hda5 挂载一个Windows FAT32文件系统 
mount /dev/sda1 /mnt/usbdisk 挂载一个usb 捷盘或闪存设备 
mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享 
6.磁盘空间操作的命令
df -h 显示已经挂载的分区列表 
ls -lSr |more 以尺寸大小排列文件和目录 
du -sh dir1 估算目录 'dir1' 已经使用的磁盘空间' 
du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小 
7.用户和群组相关命令 
groupadd group_name 创建一个新用户组 
groupdel group_name 删除一个用户组 
groupmod -n new_group_name old_group_name 重命名一个用户组 
useradd -c "Name Surname " -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 "admin" 用户组的用户 
useradd user1 创建一个新用户 
userdel -r user1 删除一个用户 ( '-r' 同时删除除主目录) 
passwd user1 修改一个用户的口令 (只允许root执行) 
chage -E 2005-12-31 user1 设置用户口令的失效期限 
ls -lh 显示权限 
chmod 777 directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限 
chmod 700 directory1 删除群组(g)与其他人(o)对目录的读写执行权限 
chown user1 file1 改变一个文件的所有人属性，为use1。 
chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性都为use1所有 
chgrp group1 file1 改变文件的群组为group1 
chown user1:group1 file1 改变一个文件的所有人和群组属性，所属组为group1，用户为use1。 
find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件 
chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 
chmod u-s /bin/file1 禁用一个二进制文件的 SUID位 
chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的 
chmod g-s /home/public 禁用一个目录的 SGID 位 
chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 
chmod o-t /home/public 禁用一个目录的 STIKY 位 
8.打包和解压缩文件的命令 
bunzip2 file1.bz2 解压一个叫做 'file1.bz2'的文件 
bzip2 file1 压缩一个叫做 'file1' 的文件 
gunzip file1.gz 解压一个叫做 'file1.gz'的文件 
gzip file1 压缩一个叫做 'file1'的文件 
gzip -9 file1 最大程度压缩 
rar a file1.rar test_file 创建一个叫做 'file1.rar' 的包 
rar a file1.rar file1 file2 dir1 打包 'file1', 'file2' 以及目录 'dir1' 
rar x file1.rar 解rar包 
unrar x file1.rar 解rar包 
tar -cvf archive.tar file1 创建一个非压缩的tar包 
tar -cvf archive.tar file1 file2 dir1 创建一个包含了 'file1', 'file2' 'dir1'的包 
tar -tf archive.tar 显示一个包中的内容 
tar -xvf archive.tar 释放一个包 
tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp目录下 （-c是指定目录）
tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包 
tar -xvfj archive.tar.bz2 解压一个bzip2格式的压缩包 
tar -cvfz archive.tar.gz dir1 创建一个gzip格式的压缩包 
tar -xvfz archive.tar.gz 解压一个gzip格式的压缩包 
zip file1.zip file1 创建一个zip格式的压缩包 
zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个zip格式的压缩包 
unzip file1.zip 解压一个zip格式压缩包 
9.关于RPM 包的命令 
rpm -ivh package.rpm 安装一个rpm包 
rpm -ivh --nodeeps package.rpm 安装一个rpm包而忽略依赖关系警告 
rpm -U package.rpm 更新一个rpm包但不改变其配置文件 
rpm -F package.rpm 更新一个确定已经安装的rpm包 
rpm -e package_name.rpm 删除一个rpm包 
rpm -qa 显示系统中所有已经安装的rpm包 
rpm -qa | grep httpd 显示所有名称中包含 "httpd" 字样的rpm包 
rpm -qi package_name 获取一个已安装包的特殊信息 
rpm -ql package_name 显示一个已经安装的rpm包提供的文件列表 
rpm -qc package_name 显示一个已经安装的rpm包提供的配置文件列表 
rpm -q package_name --whatrequires 显示与一个rpm包存在依赖关系的列表 
rpm -q package_name --whatprovides 显示一个rpm包所占的体积 
rpm -q package_name --scripts 显示在安装/删除期间所执行的脚本l 
rpm -q package_name --changelog 显示一个rpm包的修改历史 
rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个rpm包所提供 
rpm -qp package.rpm -l 显示由一个尚未安装的rpm包提供的文件列表 
rpm --import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书 
rpm --checksig package.rpm 确认一个rpm包的完整性 
rpm -qa gpg-pubkey 确认已安装的所有rpm包的完整性 
rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间 
rpm -Va 检查系统中所有已安装的rpm包- 小心使用 
rpm -Vp package.rpm 确认一个rpm包还未安装 
rpm2cpio package.rpm | cpio --extract --make-directories *bin* 从一个rpm包运行可执行文件 
rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm 从一个rpm源码安装一个构建好的包 
rpmbuild --rebuild package_name.src.rpm 从一个rpm源码构建一个 rpm 包 
10.YUM 软件包升级器  
yum install package_name 下载并安装一个rpm包 
yum localinstall package_name.rpm 将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系 
yum update package_name.rpm 更新当前系统中所有安装的rpm包 
yum update package_name 更新一个rpm包 
yum remove package_name 删除一个rpm包 
yum list 列出当前系统中安装的所有包 
yum search package_name 在rpm仓库中搜寻软件包 
yum clean packages 清理rpm缓存删除下载的包 
yum clean headers 删除所有头文件 
yum clean all 删除所有缓存的包和头文件



先进入管理员模式

执行：

yum remove firefox

然后用whereis 查看，却发现还是有：

[root@localhost ~]# whereis firefox

firefox: /usr/lib64/firefox
再执行

cd /usr/lib64/

rm -rf firefox

即可干净删除firefox
 
其他软件卸载方法类似。
ntfs3安装

sudo dnf install epel-release
sudo dnf in ntfs-3g -y
sudo yum install aria2
例子
aria2 https://mirrors.openanolis.cn/anolis/23/isos/GA/x86_64/AnolisOS-23.0-x86_64-dvd.iso

缺少/usr/bin/pdftotext
sudo yum -y install poppler-utils

#yum源安装

yum install epel-release #需要安装epel源

yum install unar

3、解压rar文件

unar file.rar

#Linux解压缩命令

*.tar.gz后缀 解压命令：tar -zxv -f file.tar.gz

*.gz后缀 解压命令：gzip -d file.gz

*.tar.bz2后缀 解压命令：tar -jxv -f file.tar.bz2

.*bz2后缀 解压命令：bzip2 -d file.bz2

*.zip后缀 解压命令：unar file.zip/unzip file.zip

*.rar后缀 解压命令：unar file.rar

